{"mappings":"YAAA,IAAMA,EAAOC,SAASC,cAAc,SAE9BC,EAAUF,SAASC,cAAc,YACjCE,EAAQH,SAASC,cAAc,aAQjCG,EAAW,IAAIC,sBASnB,SAAkBC,GAChBA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,iBACRC,GAAQ,EACRC,IAAmBC,MAAK,SAAAC,GACtBd,EAAKe,mBAAmB,YAAaC,EAAWF,IAC5CA,EAAKG,KAAKC,QAAUP,GACtBN,EAASc,UAAUf,E,UApBb,CACdgB,KAAM,KACNC,WAAY,UAGVV,EAAO,EAsBX,SAASC,IACP,OAAOU,MAAM,GAAoBC,OA9BlB,4CA8BU,UAAaA,OAALZ,IAAQE,MAAK,SAAAW,GAC5C,IAAKA,EAAKC,GACR,MAAM,IAAIC,MAAMF,EAAKG,YAEvB,OAAOH,EAAKI,M,IAIhB,SAASZ,EAAWF,GAGlB,OAFAX,EAAQ0B,UAAY,MAAiBN,OAAXZ,EAAK,QAAsBY,OAAhBT,EAAKG,KAAKC,MAAM,QAE9CJ,EAAKgB,QACTC,KAAI,SAAAC,G,IAAGC,EAAED,EAAFC,GAAIC,EAAIF,EAAJE,KAAMC,EAAKH,EAALG,MAChB,MAAO,4BACcZ,OADcU,EAAG,gCACJV,OAAbY,EAAM,SACCZ,OADMW,EAAK,yCACNX,OAALW,EAAK,4B,IAGlCE,KAAK,G,CAvCVxB,IAAeC,MAAK,SAAAC,GAClBd,EAAKe,mBAAmB,YAAaC,EAAWF,IAEhDT,EAASgC,QAAQjC,E","sources":["src/index.js"],"sourcesContent":["const list = document.querySelector('.list');\n// const loadMoreButton = document.querySelector('.load-more');\nconst counter = document.querySelector('.counter');\nconst guard = document.querySelector('.js-guard');\n\nconst BASE_URL = 'https://rickandmortyapi.com/api/character';\n\nconst options = {\n  root: null,\n  rootMargin: '200px',\n};\nlet observer = new IntersectionObserver(loadMore, options);\nlet page = 1;\n\ngetCharacter().then(data => {\n  list.insertAdjacentHTML('beforeend', makeRander(data));\n\n  observer.observe(guard);\n});\n\nfunction loadMore(entries) {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      page += 1;\n      getCharacter(page).then(data => {\n        list.insertAdjacentHTML('beforeend', makeRander(data));\n        if (data.info.pages === page) {\n          observer.unobserve(guard);\n        }\n      });\n    }\n  });\n}\n\nfunction getCharacter() {\n  return fetch(`${BASE_URL}?page=${page}`).then(resp => {\n    if (!resp.ok) {\n      throw new Error(resp.statusText);\n    }\n    return resp.json();\n  });\n}\n\nfunction makeRander(data) {\n  counter.innerHTML = `<p>${page} of ${data.info.pages}</p>`;\n\n  return data.results\n    .map(({ id, name, image }) => {\n      return `<li class=\"card\" data-id=${id}>\n                <img src=${image} alt=${name} />\n                <p class=\"name\">${name}</p>\n              </li>`;\n    })\n    .join('');\n}\n"],"names":["$b8f9b7833fa37166$var$list","document","querySelector","$b8f9b7833fa37166$var$counter","$b8f9b7833fa37166$var$guard","$b8f9b7833fa37166$var$observer","IntersectionObserver","entries","forEach","entry","isIntersecting","$b8f9b7833fa37166$var$page","$b8f9b7833fa37166$var$getCharacter","then","data","insertAdjacentHTML","$b8f9b7833fa37166$var$makeRander","info","pages","unobserve","root","rootMargin","fetch","concat","resp","ok","Error","statusText","json","innerHTML","results","map","param","id","name","image","join","observe"],"version":3,"file":"index.ad31f56c.js.map"}